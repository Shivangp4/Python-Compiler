bubbleSort:
	beginfunc
	array = popparam
	t1 = - 4
	t2 = array[t1]
	n = t2
	i = 0
	i = 0

L1:
	if i<n goto L2
	goto L3

L2:
	swapped = False
	j = 0
	t3 = - i
	t4 = t3 - 1
	t5 = n + t4
	j = 0

L4:
	if j<t5 goto L5
	goto L6

L5:

L7:
	t6 = j * 4
	t7 = array[t6]
	t8 = j + 1
	t9 = t8 * 4
	t10 = array[t9]
	t11 = t7 > t10
	if t11 goto L8
	goto L9

L8:
	t12 = j * 4
	t13 = array[t12]
	temp = t13
	t14 = j * 4
	t16 = j + 1
	t17 = t16 * 4
	t18 = array[t17]
	array[t14] = t18
	t19 = j + 1
	t20 = t19 * 4
	array[t20] = temp
	swapped = True
	goto L10

L9:

L10:
	t22 = j
	j = t22 + 1
	goto L4

L6:

L11:
	t23 = not swapped
	if t23 goto L12
	goto L13

L12:
	goto L3
	goto L14

L13:

L14:
	t24 = i
	i = t24 + 1
	goto L1

L3:
	return
	endfunc

insertionSort:
	beginfunc
	arr = popparam
	t1 = - 4
	t2 = arr[t1]
	n = t2
	i = 0
	i = 1

L15:
	if i<n goto L16
	goto L17

L16:
	t3 = i * 4
	t4 = arr[t3]
	key = t4
	t5 = - 1
	t6 = i + t5
	j = t6

L18:
	t7 = j >= 0
	t8 = j * 4
	t9 = arr[t8]
	t10 = key < t9
	t11 = t7 and t10
	if t11 goto L19
	goto L20

L19:
	t12 = j + 1
	t13 = t12 * 4
	t15 = j * 4
	t16 = arr[t15]
	arr[t13] = t16
	j = j - 1
	goto L18

L20:
	t17 = j + 1
	t18 = t17 * 4
	arr[t18] = key
	t20 = i
	i = t20 + 1
	goto L15

L17:
	return
	endfunc

main:
	beginfunc
	t1 = - 2
	t2 = - 9
	param 24
	stackpointer +4
	call allocmem , 1
	stackpointer -4
	t3 = popparam
	t3[0] = 5
	t3 = t3 + 4
	t3[0] = t1
	t3[4] = 45
	t3[8] = 0
	t3[12] = 11
	t3[16] = t2
	data1 = t3
	t4 = - 2
	t5 = - 9
	param 24
	stackpointer +4
	call allocmem , 1
	stackpointer -4
	t6 = popparam
	t6[0] = 5
	t6 = t6 + 4
	t6[0] = t4
	t6[4] = 45
	t6[8] = 0
	t6[12] = 11
	t6[16] = t5
	data2 = t6
	param data1
	stackpointer +8
	call bubbleSort , 1
	stackpointer -8
	param data2
	stackpointer +8
	call insertionSort , 1
	stackpointer -8
	param "Sorted array using bubble sort:"
	stackpointer +8
	call print , 1
	stackpointer -8
	i = 0
	i = 0

L21:
	if i<5 goto L22
	goto L23

L22:
	t7 = i * 4
	t8 = data1[t7]
	param t8
	stackpointer +4
	call print , 1
	stackpointer -4
	t9 = i
	i = t9 + 1
	goto L21

L23:
	param ""
	stackpointer +8
	call print , 1
	stackpointer -8
	param "Sorted array using insertion sort:"
	stackpointer +8
	call print , 1
	stackpointer -8
	i = 0

L24:
	if i<5 goto L25
	goto L26

L25:
	t10 = i * 4
	t11 = data2[t10]
	param t11
	stackpointer +4
	call print , 1
	stackpointer -4
	t12 = i
	i = t12 + 1
	goto L24

L26:
	return
	endfunc

L27:
	t1 = __name__ == "__main__"
	if t1 goto L28
	goto L29

L28:
	stackpointer +0
	call main , 0
	stackpointer -0
	goto L30

L29:

L30:
